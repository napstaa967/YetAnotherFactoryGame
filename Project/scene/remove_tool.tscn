[gd_scene load_steps=4 format=2]

[ext_resource path="res://textures/misc/remove_oneshot.png" type="Texture" id=1]

[sub_resource type="GDScript" id=7]
resource_local_to_scene = true
script/source = "extends Area2D

export(Dictionary) var metadata = {
	\"type\": \"remove\",
	\"mode\": \"oneshot\",
	\"sell\": 0,
	\"buy\": 0,
	\"elec\": 10,
	\"on\": false
}

func _ready():
	$ElecTimer.set_wait_time(2)
	$ElecTimer.start()
	$SellerTimer.set_wait_time(1)
	texupdate()

func texupdate():
	var texturestuff
	var textureoverrides = {}
	var file = File.new()
	match get_meta(\"metadata\").mode:
		\"seller\":
			if !file.file_exists(BaseFuncs.moddedload(\"textures/machinery/seller/texture_override.json\")):
				texturestuff = \"textures/machinery/seller/seller.png\"
			else:
				file.open(BaseFuncs.moddedload(\"textures/machinery/seller/texture_override.json\"), File.READ)
		\"oneshot\":
			if !file.file_exists(BaseFuncs.moddedload(\"textures/misc/remove_oneshot_texture_override.json\")):
				texturestuff = \"textures/misc/remove_oneshot.png\"
			else:
				file.open(BaseFuncs.moddedload(\"textures/misc/remove_oneshot_texture_override.json\"), File.READ)
		\"persistent\":
			if !file.file_exists(BaseFuncs.moddedload(\"textures/misc/remove_persistent_texture_override.json\")):
				texturestuff = \"textures/misc/remove_persistent.png\"
			else:
				file.open(BaseFuncs.moddedload(\"textures/misc/remove_persistent_texture_override.json\"), File.READ)
	if file.is_open():
		textureoverrides = parse_json(file.get_as_text())
	texturestuff = BaseFuncs.loadoverrides(textureoverrides, get_node(\"Sprite\"), get_meta(\"metadata\"), texturestuff, \"normal\")
	if get_meta(\"metadata\").mode == \"seller\":
		if texturestuff.has(\"unhandled_overrides\"):
			if texturestuff.unhandled_overrides.has(\"normal\"):
				for i in texturestuff.unhandled_overrides.normal:
					var override = texturestuff.unhandled_overrides.normal[i]
					if !override.has(\"enable\") || override.enable == true:
						if i == \"all\":
							for ii in override:
								match ii:
									\"rotation\":
										if get_node(\"Sprite\") is Sprite:
											get_node(\"Sprite\").rotation_degrees = override.rotation
										else:
											get_node(\"Sprite\").rect_pivot_offset = Vector2(get_node(\"Sprite\").rect_size.x/2, get_node(\"Sprite\").rect_size.y/2)
											get_node(\"Sprite\").rect_rotation = override.rotation
									\"tex_off\":
										if File.new().file_exists(BaseFuncs.moddedload(override.tex_off)):
											if typeof(texturestuff.tex) != TYPE_DICTIONARY:
												texturestuff.tex = {}
											texturestuff.tex.off = override.tex_off
									\"tex_on\":
										if File.new().file_exists(BaseFuncs.moddedload(override.tex_on)):
											if typeof(texturestuff.tex) != TYPE_DICTIONARY:
												texturestuff.tex = {}
											texturestuff.tex.on = override.tex_on
									\"flipx\":
										get_node(\"Sprite\").flip_h = bool(override.flipx)
									\"flipy\":
										get_node(\"Sprite\").flip_v = bool(override.flipy)
	if get_meta(\"metadata\").mode != \"seller\":
		$Sprite.texture = BaseFuncs.load_texture(texturestuff.tex)
	else:
		match get_meta(\"metadata\").on:
			true:
				$Sprite.texture = BaseFuncs.load_texture(texturestuff.tex.on)
			false:
				$Sprite.texture = BaseFuncs.load_texture(texturestuff.tex.off)
	$Sprite.texture.set_size_override(Vector2(64,64))
	$Sprite.texture.set_flags(0)

func _process(_delta):
	if get_meta(\"metadata\").placing == true:
		$Sprite.z_index = 99
		return
	if get_meta(\"metadata\").placing == false:
		metadata = get_meta(\"metadata\")
		for area in get_overlapping_areas():
			if !area.is_queued_for_deletion() && area.has_meta(\"metadata\") && area.get_meta(\"metadata\").placing == false:
				match metadata.mode:
					\"oneshot\":
						$Sprite.z_index = 2
						area.queue_free()
						var money = get_tree().current_scene.get_meta(\"metadata\").duplicate(true)
						if area.get_meta(\"metadata\").has(\"sell\"):
							money.money += area.get_meta(\"metadata\").sell
						self.queue_free()
						return
					\"persistent\":
						$Sprite.z_index = 2
						if area.position.x > position.x-4 && area.position.y > position.y-4 && area.position.x < position.x+4 && area.position.y < position.y+4:
							area.queue_free()
							return
					\"seller\":
						$Sprite.z_index = 0
						if area.position.x > position.x-4 && area.position.y > position.y-4 && area.position.x < position.x+4 && area.position.y < position.y+4:
							var money = get_tree().current_scene.get_meta(\"metadata\").duplicate(true)
							if area.get_meta(\"metadata\").has(\"sell\"):
								money.money += area.get_meta(\"metadata\").sell
							area.queue_free()
							get_tree().current_scene.set_meta(\"metadata\", money.duplicate(true)) 
							var updatething = get_meta(\"metadata\")
							updatething.on = true
							set_meta(\"metadata\", updatething.duplicate(true))
							texupdate()
							if !$SellerTimer.is_stopped():
								$SellerTimer.stop()
							$SellerTimer.start()
							return
						
						
					
func seller_timeout():
	var updatething = get_meta(\"metadata\")
	updatething.on = false
	set_meta(\"metadata\", updatething.duplicate(true))
	texupdate()
	return


func electrical_due():
	if !get_meta(\"metadata\").placing:
		get_tree().current_scene.due += get_meta(\"metadata\").elec
	$ElecTimer.start()
"

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 28, 28 )

[node name="Area2D" type="Area2D"]
script = SubResource( 7 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 32, 32 )
z_index = 2
texture = ExtResource( 1 )

[node name="the erase" type="CollisionShape2D" parent="."]
position = Vector2( 32, 32 )
shape = SubResource( 1 )

[node name="SellerTimer" type="Timer" parent="."]

[node name="ElecTimer" type="Timer" parent="."]

[connection signal="timeout" from="SellerTimer" to="." method="seller_timeout"]
[connection signal="timeout" from="ElecTimer" to="." method="electrical_due"]
