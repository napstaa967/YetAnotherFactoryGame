items can be modded into the game

tutorial:

custom items go into .mds files, and are formatted like json files

basic item structure:
------------------------------
{
	filetype: yawfg:item
	//data goes here
}
------------------------------

data usage:

filetype: MUST BE INCLUDED | defines the type of file it is, item for items

modversion: version of your mod
gameversion: version of the game the mod's intended to be used on, using on a lower version will use the update textures
namespace: namespace of the mod, normal game uses "yawfg"
denominator: name for the item in the files
name: set a display name
type: type of item
istest: boolean, if it should be added in stable game builds or demos
creativemodetab: [none|machinery|wiring|items|other] tab used in creative mode, if an invalid one is picked, none will be picked, must use namespace (ej yawfg:machinery)
spritesheet: [none|<name>|{}] set none to use default placeholder icons
--type: [files|single] type of spritesheet

--icon: [filepath|name] indicate "FILE=" or "NAME="
## for file type:
## i recommend file type more, since it supports different size textures, although it takes up storage
--sprites:
----texture: [file|name]
----animated: boolean, if the textures are animated
#### if animated:
----framerate: int, frames per second
----frames: list of paths
## for single type:
--sprites:
----animated: boolean, if the textures are animated
#### if animated:
----framerate: int, frames per second
----frames: list
------size: [percentage|pixel]
------positon: [percentage|pixel]
#### else:
----size: [percentage|pixel]
----positon: [percentage|pixel]

example item:
-------------
{
	filetype: yawfg:item
	
	modversion: 1.0.0
	gameversion: 0
	
	namespace: test
	denominator: amongium
	name: Amongium
	type: yawfg:resource
	istest: False
	creativemodetab: yawfg:items
	spritesheet: {
		type: files
		
		icon: FILE=impostor.png
		sprites: {
			texture: FILE=amongium.png
			animated: False
		}
	}
}
-------------